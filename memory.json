{"type":"entity","name":"DynamicStockSage","entityType":"ProjectStructure","observations":["Dynamic Stock Sage is a stock prediction application with a React/TypeScript frontend and Python backend","The project is divided into two main folders: src/ for frontend and ml/ for backend","The frontend is built using React with TypeScript and leverages Zustand for state management","The backend consists of a machine learning pipeline and a FastAPI for API endpoints","Currently implementing Phase 2 of the project, focusing on advanced analysis tools"],"lastAccessed":"2025-03-03T13:48:17.335Z","createdAt":"2025-03-03T13:48:17.335Z","accessCount":1,"tags":["project","overview","structure"],"children":[]}
{"type":"entity","name":"FrontendArchitecture","entityType":"Architecture","observations":["Built with React and TypeScript using Vite as the build tool","Uses Zustand for global state management","UI components from Shadcn UI with Tailwind CSS for styling","Implements React Router for page navigation","Uses custom API services and React Query for data fetching","Real-time updates through WebSocket integration"],"lastAccessed":"2025-03-03T13:48:26.015Z","createdAt":"2025-03-03T13:48:26.015Z","accessCount":1,"tags":["frontend","architecture","React","TypeScript"],"children":[]}
{"type":"entity","name":"BackendArchitecture","entityType":"Architecture","observations":["Python-based backend divided into ML pipeline and API","FastAPI for REST API implementation","Uses Pydantic models for request/response validation","Organized with Service Layer Pattern for business logic","WebSocket implementation for real-time updates","RESTful API design principles"],"lastAccessed":"2025-03-03T13:48:26.017Z","createdAt":"2025-03-03T13:48:26.017Z","accessCount":1,"tags":["backend","architecture","Python","FastAPI"],"children":[]}